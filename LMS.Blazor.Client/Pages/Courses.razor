@page "/courses"
@rendermode InteractiveWebAssembly
@using LMS.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]

<div class="dashboard-container">
    <!-- Header -->
    <div class="dashboard-header">
        <h1>Welcome back, @userName!</h1>
    </div>

    <!-- Continue Learning Section -->
    <div class="dashboard-section">
        <h2>Continue Learning</h2>
        @if (ongoingCourses == null)
        {
            <p>Loading ongoing courses...</p>
        }
        else if (!ongoingCourses.Any())
        {
            <p>No ongoing courses.</p>
        }
        else
        {
            <div class="course-list">
                @foreach (var course in ongoingCourses)
                {
                    <div class="course-card">
                        <h3>@course.Name</h3>
                        <p>@course.Description</p>
                        <p>Progress: 3h55min</p> <!-- Replace with actual progress -->
                        <button @onclick="() => NavigateToCourse(course.CourseId)">Continue</button>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Recent Activities Section -->
    <div class="dashboard-section">
        <h2>Recent Activities</h2>
        @if (recentActivities == null)
        {
            <p>Loading recent activities...</p>
        }
        else if (!recentActivities.Any())
        {
            <p>No recent activities.</p>
        }
        else
        {
            <div class="activity-list">
                @foreach (var activity in recentActivities)
                {
                    <div class="activity-card">
                        <h4>@activity.Name</h4>
                        <p>@activity.Description</p>
                        <p>Due: @activity.EndDate.ToShortDateString()</p>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Quick Links Section -->
    <div class="dashboard-section">
        <h2>Quick Links</h2>
        <div class="quick-links">
            <button @onclick="NavigateToCourses">Courses</button>
            <button @onclick="NavigateToAnnouncements">Announcements</button>
            <button @onclick="NavigateToSettings">Settings</button>
        </div>
    </div>
</div>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    private List<CourseDto>? ongoingCourses;
    private List<ActivityDto>? recentActivities;

    private string userName = "Loading...";

    protected override async Task OnInitializedAsync()// dynamically get the logged in users name
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            userName = $"{user.FindFirst("given_name")?.Value}, {user.FindFirst("role")?.Value}";
        }

        await LoadDashboardData();
    }

    private async Task LoadDashboardData()
    {
        // Simulate loading delay
        await Task.Delay(500);

        // Mock data for ongoing courses
        ongoingCourses = new List<CourseDto>
        {
            new CourseDto
            {
                CourseId = 1,
                Name = "ASP.NET Core Web API",
                Description = "Learn how to build RESTful APIs with ASP.NET Core.",
                StartDate = DateTime.Today.AddDays(-10),
                EndDate = DateTime.Today.AddDays(20)
            },
            new CourseDto
            {
                CourseId = 2,
                Name = "Blazor Fundamentals",
                Description = "Master the basics of Blazor for building interactive web apps.",
                StartDate = DateTime.Today.AddDays(-5),
                EndDate = DateTime.Today.AddDays(25)
            }
        };

        // Mock data for recent activities
        recentActivities = new List<ActivityDto>
        {
            new ActivityDto
            {
                ActivityId = 1,
                Name = "Submit Assignment 1",
                Description = "Complete and submit the first assignment for ASP.NET Core.",
                EndDate = DateTime.Today.AddDays(3)
            },
            new ActivityDto
            {
                ActivityId = 2,
                Name = "Quiz: Blazor Basics",
                Description = "Take the quiz on Blazor fundamentals.",
                EndDate = DateTime.Today.AddDays(5)
            }
        };
    }

    private void NavigateToCourse(int courseId)
    {
        NavigationManager.NavigateTo($"/courses/{courseId}");
    }

    private void NavigateToCourses()
    {
        NavigationManager.NavigateTo("/courses");
    }

    private void NavigateToAnnouncements()
    {
        NavigationManager.NavigateTo("/announcements");
    }

    private void NavigateToSettings()
    {
        NavigationManager.NavigateTo("/settings");
    }
}